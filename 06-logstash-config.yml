apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash
data:
  starter.conf: |
    input {
      tcp {
        port => 5044
        type => syslog
      }
    }

    filter {
      if [type] == "syslog" {
        grok {
          match => { "message" => "%{SYSLOG5424PRI}%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:syslog5424_ts}|-) +(?:%{HOSTNAME:syslog5424_host}|-) +(?:%{NOTSPACE:syslog5424_app}|-) +(?:%{NOTSPACE:syslog5424_proc}|-) +(?:%{WORD:syslog5424_msgid}|-) +(?:%{SYSLOG5424SD:syslog5424_sd}|-|) +%{GREEDYDATA:syslog5424_msg}" }
        }
      }
    }

    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }
  main.conf: |
    input {
      tcp {
        port => 5044
        type => syslog
      }
      beats {
        port => 5045
      }
    }

    filter {
      if [type] == "syslog" {
        mutate { add_field => { "index_type" => "pcf" } }
        grok {
          id => "syslog"
          match => { "message" => "%{SYSLOG5424PRI}%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:syslog5424_ts}|-) +(?:%{HOSTNAME:syslog5424_host}|-) +(?:%{NOTSPACE:syslog5424_app}|-) +(?:%{NOTSPACE:syslog5424_proc}|-) +(?:%{WORD:syslog5424_msgid}|-) +(?:%{SYSLOG5424SD:syslog5424_sd}|-|) +%{GREEDYDATA:syslog5424_msg}" }
        }
        if !("_grokparsefailure" in [tags]) {
          date {
            match => [ "syslog5424_ts", "ISO8601" ]
          }
          kv {
            remove_char_value => "\[\]\""
            prefix => "tags_"
            source => "syslog5424_sd"
          }
          mutate {
            add_field => {
              "cf_org" => "%{tags_organization_name}"
              "cf_space" => "%{tags_space_name}"
              "cf_app" => "%{tags_app_name}"
              "cf_app_instance" => "%{tags_instance_id}"
              "cf_source" => "%{tags_source_type}"
              "msg" => "%{syslog5424_msg}"
            }
          }
          if [cf_source] in ["API", "RTR", "APP/PROC/WEB"] {
            if [cf_source] == "API" {
              mutate {
                remove_field => [ "cf_app_instance" ]
              }
            } else if [cf_source] == "RTR" {
              grok {
                id => "rtr"
                named_captures_only => true
                match => { "msg" => "%{HOSTNAME} - \[%{TIMESTAMP_ISO8601}\] \"(?:%{WORD:web_verb} %{NOTSPACE:web_request}(?: HTTP/%{NUMBER:web_httpversion})?|%{DATA})\" %{NUMBER:web_response} %{NUMBER} %{NUMBER:web_content_length} %{QS} %{QS:web_agent} %{GREEDYDATA}" }
                remove_field => [ "msg" ]
              }
            } else {
              json {
                source => "msg"
                target => "app"
              }
              if !("_jsonparsefailure" in [tags]) {
                mutate {
                  add_field => {
                    "app_thread" => "%{[app][thread]}"
                    "app_logger" => "%{[app][logger]}"
                    "app_message" => "%{[app][message]}"
                    "app_level" => "%{[app][level]}"
                  }
                }
                mutate {
                  remove_field => [ "msg", "app" ]
                }
              }
            }

            prune {
              blacklist_names => [ "^syslog5424_", "^tags_", "^host$", "^port$", "^message$", "^type$", "^@version$" ]
            }
          } else {
            drop { }
          }
        }
      }

      if [@metadata][beat] == "filebeat" {
        mutate { add_field => { "index_type" => "k8s" } }
        json {
          source => "message"
          target => "app"
        }
        if !("_jsonparsefailure" in [tags]) {
          mutate {
            add_field => {
              "app_thread" => "%{[app][thread]}"
              "app_logger" => "%{[app][logger]}"
              "app_message" => "%{[app][message]}"
              "app_level" => "%{[app][level]}"
            }
          }
          mutate {
            remove_field => [ "msg", "app" ]
          }
        } else {
          mutate {
            add_field => {
              "msg" => "%{[message]}"
            }
          }
        }
        mutate {
          add_field => {
            app_instance => "%{[agent][hostname]}"
            app_name => "%{[fields][app_name]}"
            app_namespace => "%{[fields][app_namespace]}"
          }
        }
        mutate {
          remove_field => [ "fields", "app", "ecs", "agent", "tags", "message", "log", "host", "input" ]
        }
      }
    }

    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "logstash-%{index_type}-%{+YYYY.MM.dd}"
      }
    }
